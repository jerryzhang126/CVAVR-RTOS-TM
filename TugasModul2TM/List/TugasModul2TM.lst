
AVRASM ver. 2.1.30  D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm Wed Mar 14 17:35:06 2018

D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1059): warning: Register r4 already defined by the .DEF directive
D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1060): warning: Register r6 already defined by the .DEF directive
D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1061): warning: Register r8 already defined by the .DEF directive
D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1062): warning: Register r11 already defined by the .DEF directive
D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1063): warning: Register r10 already defined by the .DEF directive
D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1064): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Evaluation
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _x=R4
                 	.DEF _y=R6
                 	.DEF _z=R8
                 	.DEF __lcd_x=R11
                 	.DEF __lcd_y=R10
                 	.DEF __lcd_maxx=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004e 	JMP  __RESET
000002 940c 007e 	JMP  _ext_int0_isr
000004 940c 008d 	JMP  _ext_int1_isr
000006 940c 009c 	JMP  _ext_int2_isr
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4e49
000034 3054
000035 3d20
000036 2520      	.DB  0x49,0x4E,0x54,0x30,0x20,0x3D,0x20,0x25
000037 0069
000038 3e3e
000039 454b
00003a 204c      	.DB  0x69,0x0,0x3E,0x3E,0x4B,0x45,0x4C,0x20
00003b 2037
00003c 4d54
00003d 3c3c
00003e 4900      	.DB  0x37,0x20,0x54,0x4D,0x3C,0x3C,0x0,0x49
00003f 544e
000040 2031
000041 203d
000042 6925      	.DB  0x4E,0x54,0x31,0x20,0x3D,0x20,0x25,0x69
000043 4900
000044 544e
000045 2032
000046 203d      	.DB  0x0,0x49,0x4E,0x54,0x32,0x20,0x3D,0x20
000047 6925
D:\cvavreval\bin\TugasModul2TM\List\TugasModul2TM.asm(1107): warning: .cseg .db misalignment - padding zero byte
000048 0000      	.DB  0x25,0x69,0x0
                 _0x2000003:
000049 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00004a 0002      	.DW  0x02
00004b 0270      	.DW  __base_y_G100
00004c 0092      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00004d 0000      	.DW  0
                 
                 __RESET:
00004e 94f8      	CLI
00004f 27ee      	CLR  R30
000050 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000051 e0f1      	LDI  R31,1
000052 bffb      	OUT  GICR,R31
000053 bfeb      	OUT  GICR,R30
000054 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000055 e1f8      	LDI  R31,0x18
000056 bdf1      	OUT  WDTCR,R31
000057 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000058 e08d      	LDI  R24,(14-2)+1
000059 e0a2      	LDI  R26,2
00005a 27bb      	CLR  R27
                 __CLEAR_REG:
00005b 93ed      	ST   X+,R30
00005c 958a      	DEC  R24
00005d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005f e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000060 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000061 93ed      	ST   X+,R30
000062 9701      	SBIW R24,1
000063 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000064 e9e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000065 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000066 9185      	LPM  R24,Z+
000067 9195      	LPM  R25,Z+
000068 9700      	SBIW R24,0
000069 f061      	BREQ __GLOBAL_INI_END
00006a 91a5      	LPM  R26,Z+
00006b 91b5      	LPM  R27,Z+
00006c 9005      	LPM  R0,Z+
00006d 9015      	LPM  R1,Z+
00006e 01bf      	MOVW R22,R30
00006f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000070 9005      	LPM  R0,Z+
000071 920d      	ST   X+,R0
000072 9701      	SBIW R24,1
000073 f7e1      	BRNE __GLOBAL_INI_LOOP
000074 01fb      	MOVW R30,R22
000075 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000076 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000077 bfed      	OUT  SPL,R30
000078 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000079 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007b e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007c 940c 00dc 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;int x,y,z;
                 ;char buf[16];
                 ;
                 ;
                 ;// External Interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _ext_int0_isr:
00007e 940e 037e 	CALL SUBOPT_0x0
                 ; 0000 000D x=x+1;
000080 01f2      	MOVW R30,R4
000081 9631      	ADIW R30,1
000082 012f      	MOVW R4,R30
                 ; 0000 000E y=0;
000083 2466      	CLR  R6
000084 2477      	CLR  R7
                 ; 0000 000F z=0;
000085 940e 038c 	CALL SUBOPT_0x1
                 ; 0000 0010 lcd_clear();
                 ; 0000 0011 delay_ms(100);
                 ; 0000 0012 lcd_gotoxy(0,0);
                 ; 0000 0013 sprintf (buf, "INT0 = %i",x);
                +
000087 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000088 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000089 93fa      	ST   -Y,R31
00008a 93ea      	ST   -Y,R30
00008b 01f2      	MOVW R30,R4
00008c c02a      	RJMP _0x7
                 ; 0000 0014 lcd_puts(buf);
                 ; 0000 0015 lcd_gotoxy(0,1);
                 ; 0000 0016 lcd_putsf(">>KEL 7 TM<<");
                 ; 0000 0017 
                 ; 0000 0018 }
                 ;
                 ;// External Interrupt 1 service routine
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 001C {
                 _ext_int1_isr:
00008d 940e 037e 	CALL SUBOPT_0x0
                 ; 0000 001D x=0;
00008f 2444      	CLR  R4
000090 2455      	CLR  R5
                 ; 0000 001E y++;
000091 01f3      	MOVW R30,R6
000092 9631      	ADIW R30,1
000093 013f      	MOVW R6,R30
                 ; 0000 001F z=0;
000094 940e 038c 	CALL SUBOPT_0x1
                 ; 0000 0020 lcd_clear();
                 ; 0000 0021 delay_ms(100);
                 ; 0000 0022 lcd_gotoxy(0,0);
                 ; 0000 0023 sprintf (buf, "INT1 = %i",y);
                +
000096 e7ed     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
000097 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
000098 93fa      	ST   -Y,R31
000099 93ea      	ST   -Y,R30
00009a 01f3      	MOVW R30,R6
00009b c01b      	RJMP _0x7
                 ; 0000 0024 lcd_puts(buf);
                 ; 0000 0025 lcd_gotoxy(0,1);
                 ; 0000 0026 lcd_putsf(">>KEL 7 TM<<");
                 ; 0000 0027 
                 ; 0000 0028 }
                 ;
                 ;// External Interrupt 2 service routine
                 ;interrupt [EXT_INT2] void ext_int2_isr(void)
                 ; 0000 002C {
                 _ext_int2_isr:
00009c 940e 037e 	CALL SUBOPT_0x0
                 ; 0000 002D x=0;
00009e 2444      	CLR  R4
00009f 2455      	CLR  R5
                 ; 0000 002E y=0;
0000a0 2466      	CLR  R6
0000a1 2477      	CLR  R7
                 ; 0000 002F z++;
0000a2 01f4      	MOVW R30,R8
0000a3 9631      	ADIW R30,1
0000a4 014f      	MOVW R8,R30
                 ; 0000 0030 lcd_clear();
0000a5 d0a7      	RCALL _lcd_clear
                 ; 0000 0031 delay_ms(100);
0000a6 e6e4      	LDI  R30,LOW(100)
0000a7 e0f0      	LDI  R31,HIGH(100)
0000a8 940e 03a0 	CALL SUBOPT_0x2
                 ; 0000 0032 lcd_gotoxy(0,0);
0000aa e0e0      	LDI  R30,LOW(0)
0000ab 93ea      	ST   -Y,R30
0000ac 93ea      	ST   -Y,R30
0000ad d092      	RCALL _lcd_gotoxy
                 ; 0000 0033 sprintf (buf, "INT2 = %i",z);
0000ae e6e0      	LDI  R30,LOW(_buf)
0000af e0f2      	LDI  R31,HIGH(_buf)
0000b0 93fa      	ST   -Y,R31
0000b1 93ea      	ST   -Y,R30
                +
0000b2 e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
0000b3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
0000b4 93fa      	ST   -Y,R31
0000b5 93ea      	ST   -Y,R30
0000b6 01f4      	MOVW R30,R8
                 _0x7:
0000b7 940e 03f7 	CALL __CWD1
0000b9 940e 0404 	CALL __PUTPARD1
0000bb e084      	LDI  R24,4
0000bc 940e 0333 	CALL _sprintf
0000be 9628      	ADIW R28,8
                 ; 0000 0034 lcd_puts(buf);
0000bf e6e0      	LDI  R30,LOW(_buf)
0000c0 e0f2      	LDI  R31,HIGH(_buf)
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
0000c3 d0ab      	RCALL _lcd_puts
                 ; 0000 0035 lcd_gotoxy(0,1);
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 93ea      	ST   -Y,R30
0000c6 e0e1      	LDI  R30,LOW(1)
0000c7 93ea      	ST   -Y,R30
0000c8 d077      	RCALL _lcd_gotoxy
                 ; 0000 0036 lcd_putsf(">>KEL 7 TM<<");
                +
0000c9 e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
0000ca e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
0000cb 93fa      	ST   -Y,R31
0000cc 93ea      	ST   -Y,R30
0000cd d0ae      	RCALL _lcd_putsf
                 ; 0000 0037 
                 ; 0000 0038 }
0000ce 91e9      	LD   R30,Y+
0000cf bfef      	OUT  SREG,R30
0000d0 91f9      	LD   R31,Y+
0000d1 91e9      	LD   R30,Y+
0000d2 91b9      	LD   R27,Y+
0000d3 91a9      	LD   R26,Y+
0000d4 9199      	LD   R25,Y+
0000d5 9189      	LD   R24,Y+
0000d6 9179      	LD   R23,Y+
0000d7 9169      	LD   R22,Y+
0000d8 90f9      	LD   R15,Y+
0000d9 9019      	LD   R1,Y+
0000da 9009      	LD   R0,Y+
0000db 9518      	RETI
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 003D {
                 _main:
                 ; 0000 003E 
                 ; 0000 003F PORTA=0x00;
0000dc e0e0      	LDI  R30,LOW(0)
0000dd bbeb      	OUT  0x1B,R30
                 ; 0000 0040 DDRA=0x00;
0000de bbea      	OUT  0x1A,R30
                 ; 0000 0041 
                 ; 0000 0042 PORTB=0x00;
0000df bbe8      	OUT  0x18,R30
                 ; 0000 0043 DDRB=0x00;
0000e0 bbe7      	OUT  0x17,R30
                 ; 0000 0044 
                 ; 0000 0045 PORTC=0x00;
0000e1 bbe5      	OUT  0x15,R30
                 ; 0000 0046 DDRC=0x00;
0000e2 bbe4      	OUT  0x14,R30
                 ; 0000 0047 
                 ; 0000 0048 PORTD=0x00;
0000e3 bbe2      	OUT  0x12,R30
                 ; 0000 0049 DDRD=0x00;
0000e4 bbe1      	OUT  0x11,R30
                 ; 0000 004A 
                 ; 0000 004B TCCR0=0x00;
0000e5 bfe3      	OUT  0x33,R30
                 ; 0000 004C TCNT0=0x00;
0000e6 bfe2      	OUT  0x32,R30
                 ; 0000 004D OCR0=0x00;
0000e7 bfec      	OUT  0x3C,R30
                 ; 0000 004E 
                 ; 0000 004F 
                 ; 0000 0050 TCCR1A=0x00;
0000e8 bdef      	OUT  0x2F,R30
                 ; 0000 0051 TCCR1B=0x00;
0000e9 bdee      	OUT  0x2E,R30
                 ; 0000 0052 TCNT1H=0x00;
0000ea bded      	OUT  0x2D,R30
                 ; 0000 0053 TCNT1L=0x00;
0000eb bdec      	OUT  0x2C,R30
                 ; 0000 0054 ICR1H=0x00;
0000ec bde7      	OUT  0x27,R30
                 ; 0000 0055 ICR1L=0x00;
0000ed bde6      	OUT  0x26,R30
                 ; 0000 0056 OCR1AH=0x00;
0000ee bdeb      	OUT  0x2B,R30
                 ; 0000 0057 OCR1AL=0x00;
0000ef bdea      	OUT  0x2A,R30
                 ; 0000 0058 OCR1BH=0x00;
0000f0 bde9      	OUT  0x29,R30
                 ; 0000 0059 OCR1BL=0x00;
0000f1 bde8      	OUT  0x28,R30
                 ; 0000 005A 
                 ; 0000 005B 
                 ; 0000 005C ASSR=0x00;
0000f2 bde2      	OUT  0x22,R30
                 ; 0000 005D TCCR2=0x00;
0000f3 bde5      	OUT  0x25,R30
                 ; 0000 005E TCNT2=0x00;
0000f4 bde4      	OUT  0x24,R30
                 ; 0000 005F OCR2=0x00;
0000f5 bde3      	OUT  0x23,R30
                 ; 0000 0060 
                 ; 0000 0061 // External Interrupt(s) initialization
                 ; 0000 0062 // INT0: On
                 ; 0000 0063 // INT0 Mode: Falling Edge
                 ; 0000 0064 // INT1: On
                 ; 0000 0065 // INT1 Mode: Falling Edge
                 ; 0000 0066 // INT2: On
                 ; 0000 0067 // INT2 Mode: Falling Edge
                 ; 0000 0068 GICR|=0xE0;      //1110-->E   0000-->0 mengaktifkan interrupt
0000f6 b7eb      	IN   R30,0x3B
0000f7 6ee0      	ORI  R30,LOW(0xE0)
0000f8 bfeb      	OUT  0x3B,R30
                 ; 0000 0069 MCUCR=0x0A;      //mengaktifkan mode falling edge atau yg lain pd interrupt 0 dan 1
0000f9 e0ea      	LDI  R30,LOW(10)
0000fa bfe5      	OUT  0x35,R30
                 ; 0000 006A MCUCSR=0x00;     //mengaktifkan interupt 2 saja
0000fb e0e0      	LDI  R30,LOW(0)
0000fc bfe4      	OUT  0x34,R30
                 ; 0000 006B GIFR=0xE0;       //menentukan flag
0000fd eee0      	LDI  R30,LOW(224)
0000fe bfea      	OUT  0x3A,R30
                 ; 0000 006C 
                 ; 0000 006D // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 006E TIMSK=0x00;
0000ff e0e0      	LDI  R30,LOW(0)
000100 bfe9      	OUT  0x39,R30
                 ; 0000 006F 
                 ; 0000 0070 // USART initialization
                 ; 0000 0071 // USART disabled
                 ; 0000 0072 UCSRB=0x00;
000101 b9ea      	OUT  0xA,R30
                 ; 0000 0073 
                 ; 0000 0074 // Analog Comparator initialization
                 ; 0000 0075 // Analog Comparator: Off
                 ; 0000 0076 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0077 ACSR=0x80;
000102 e8e0      	LDI  R30,LOW(128)
000103 b9e8      	OUT  0x8,R30
                 ; 0000 0078 SFIOR=0x00;
000104 e0e0      	LDI  R30,LOW(0)
000105 bfe0      	OUT  0x30,R30
                 ; 0000 0079 
                 ; 0000 007A // ADC initialization
                 ; 0000 007B // ADC disabled
                 ; 0000 007C ADCSRA=0x00;
000106 b9e6      	OUT  0x6,R30
                 ; 0000 007D 
                 ; 0000 007E // SPI initialization
                 ; 0000 007F // SPI disabled
                 ; 0000 0080 SPCR=0x00;
000107 b9ed      	OUT  0xD,R30
                 ; 0000 0081 
                 ; 0000 0082 // TWI initialization
                 ; 0000 0083 // TWI disabled
                 ; 0000 0084 TWCR=0x00;
000108 bfe6      	OUT  0x36,R30
                 ; 0000 0085 
                 ; 0000 0086 // Alphanumeric LCD initialization
                 ; 0000 0087 // Connections specified in the
                 ; 0000 0088 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0089 // RS - PORTC Bit 0
                 ; 0000 008A // RD - PORTC Bit 1
                 ; 0000 008B // EN - PORTC Bit 2
                 ; 0000 008C // D4 - PORTC Bit 3
                 ; 0000 008D // D5 - PORTC Bit 4
                 ; 0000 008E // D6 - PORTC Bit 5
                 ; 0000 008F // D7 - PORTC Bit 6
                 ; 0000 0090 // Characters/line: 8
                 ; 0000 0091 lcd_init(16);
000109 e1e0      	LDI  R30,LOW(16)
00010a 93ea      	ST   -Y,R30
00010b d081      	RCALL _lcd_init
                 ; 0000 0092 
                 ; 0000 0093 // Global enable interrupts
                 ; 0000 0094 #asm("sei")
00010c 9478      	sei
                 ; 0000 0095 
                 ; 0000 0096 while (1)
                 _0x3:
                 ; 0000 0097       {
                 ; 0000 0098       // Place your code here
                 ; 0000 0099 
                 ; 0000 009A       }
00010d cfff      	RJMP _0x3
                 ; 0000 009B }
                 _0x6:
00010e cfff      	RJMP _0x6
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
00010f 81e8      	LD   R30,Y
000110 71e0      	ANDI R30,LOW(0x10)
000111 f011      	BREQ _0x2000004
000112 9aab      	SBI  0x15,3
000113 c001      	RJMP _0x2000005
                 _0x2000004:
000114 98ab      	CBI  0x15,3
                 _0x2000005:
000115 81e8      	LD   R30,Y
000116 72e0      	ANDI R30,LOW(0x20)
000117 f011      	BREQ _0x2000006
000118 9aac      	SBI  0x15,4
000119 c001      	RJMP _0x2000007
                 _0x2000006:
00011a 98ac      	CBI  0x15,4
                 _0x2000007:
00011b 81e8      	LD   R30,Y
00011c 74e0      	ANDI R30,LOW(0x40)
00011d f011      	BREQ _0x2000008
00011e 9aad      	SBI  0x15,5
00011f c001      	RJMP _0x2000009
                 _0x2000008:
000120 98ad      	CBI  0x15,5
                 _0x2000009:
000121 81e8      	LD   R30,Y
000122 78e0      	ANDI R30,LOW(0x80)
000123 f011      	BREQ _0x200000A
000124 9aae      	SBI  0x15,6
000125 c001      	RJMP _0x200000B
                 _0x200000A:
000126 98ae      	CBI  0x15,6
                 _0x200000B:
                +
000127 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000128 958a     +DEC R24
000129 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00012a 9aaa      	SBI  0x15,2
                +
00012b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00012c 958a     +DEC R24
00012d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00012e 98aa      	CBI  0x15,2
                +
00012f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000130 958a     +DEC R24
000131 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000132 c08b      	RJMP _0x2080002
                 __lcd_write_data:
000133 81e8      	LD   R30,Y
000134 93ea      	ST   -Y,R30
000135 dfd9      	RCALL __lcd_write_nibble_G100
000136 81e8          ld    r30,y
000137 95e2          swap  r30
000138 83e8          st    y,r30
000139 81e8      	LD   R30,Y
00013a 93ea      	ST   -Y,R30
00013b dfd3      	RCALL __lcd_write_nibble_G100
                +
00013c e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00013d 958a     +DEC R24
00013e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00013f c07e      	RJMP _0x2080002
                 _lcd_gotoxy:
000140 81e8      	LD   R30,Y
000141 e0f0      	LDI  R31,0
000142 59e0      	SUBI R30,LOW(-__base_y_G100)
000143 4ffd      	SBCI R31,HIGH(-__base_y_G100)
000144 81e0      	LD   R30,Z
000145 81a9      	LDD  R26,Y+1
000146 0fea      	ADD  R30,R26
000147 93ea      	ST   -Y,R30
000148 dfea      	RCALL __lcd_write_data
000149 80b9      	LDD  R11,Y+1
00014a 80a8      	LDD  R10,Y+0
00014b 9622      	ADIW R28,2
00014c 9508      	RET
                 _lcd_clear:
00014d e0e2      	LDI  R30,LOW(2)
00014e 940e 03a4 	CALL SUBOPT_0x3
000150 e0ec      	LDI  R30,LOW(12)
000151 93ea      	ST   -Y,R30
000152 dfe0      	RCALL __lcd_write_data
000153 e0e1      	LDI  R30,LOW(1)
000154 940e 03a4 	CALL SUBOPT_0x3
000156 e0e0      	LDI  R30,LOW(0)
000157 2eae      	MOV  R10,R30
000158 2ebe      	MOV  R11,R30
000159 9508      	RET
                 _lcd_putchar:
00015a 81a8      	LD   R26,Y
00015b 30aa      	CPI  R26,LOW(0xA)
00015c f011      	BREQ _0x2000011
00015d 14bd      	CP   R11,R13
00015e f048      	BRLO _0x2000010
                 _0x2000011:
00015f e0e0      	LDI  R30,LOW(0)
000160 93ea      	ST   -Y,R30
000161 94a3      	INC  R10
000162 92aa      	ST   -Y,R10
000163 dfdc      	RCALL _lcd_gotoxy
000164 81a8      	LD   R26,Y
000165 30aa      	CPI  R26,LOW(0xA)
000166 f409      	BRNE _0x2000013
000167 c056      	RJMP _0x2080002
                 _0x2000013:
                 _0x2000010:
000168 94b3      	INC  R11
000169 9aa8      	SBI  0x15,0
00016a 81e8      	LD   R30,Y
00016b 93ea      	ST   -Y,R30
00016c dfc6      	RCALL __lcd_write_data
00016d 98a8      	CBI  0x15,0
00016e c04f      	RJMP _0x2080002
                 _lcd_puts:
00016f 931a      	ST   -Y,R17
                 _0x2000014:
000170 81a9      	LDD  R26,Y+1
000171 81ba      	LDD  R27,Y+1+1
000172 91ed      	LD   R30,X+
000173 83a9      	STD  Y+1,R26
000174 83ba      	STD  Y+1+1,R27
000175 2f1e      	MOV  R17,R30
000176 30e0      	CPI  R30,0
000177 f019      	BREQ _0x2000016
000178 931a      	ST   -Y,R17
000179 dfe0      	RCALL _lcd_putchar
00017a cff5      	RJMP _0x2000014
                 _0x2000016:
00017b c00e      	RJMP _0x2080003
                 _lcd_putsf:
00017c 931a      	ST   -Y,R17
                 _0x2000017:
00017d 81e9      	LDD  R30,Y+1
00017e 81fa      	LDD  R31,Y+1+1
00017f 9631      	ADIW R30,1
000180 83e9      	STD  Y+1,R30
000181 83fa      	STD  Y+1+1,R31
000182 9731      	SBIW R30,1
000183 91e4      	LPM  R30,Z
000184 2f1e      	MOV  R17,R30
000185 30e0      	CPI  R30,0
000186 f019      	BREQ _0x2000019
000187 931a      	ST   -Y,R17
000188 dfd1      	RCALL _lcd_putchar
000189 cff3      	RJMP _0x2000017
                 _0x2000019:
                 _0x2080003:
00018a 8118      	LDD  R17,Y+0
00018b 9623      	ADIW R28,3
00018c 9508      	RET
                 _lcd_init:
00018d 9aa3      	SBI  0x14,3
00018e 9aa4      	SBI  0x14,4
00018f 9aa5      	SBI  0x14,5
000190 9aa6      	SBI  0x14,6
000191 9aa2      	SBI  0x14,2
000192 9aa0      	SBI  0x14,0
000193 9aa1      	SBI  0x14,1
000194 98aa      	CBI  0x15,2
000195 98a8      	CBI  0x15,0
000196 98a9      	CBI  0x15,1
000197 80d8      	LDD  R13,Y+0
000198 81e8      	LD   R30,Y
000199 58e0      	SUBI R30,-LOW(128)
                +
00019a 93e0 0272+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00019c 81e8      	LD   R30,Y
00019d 54e0      	SUBI R30,-LOW(192)
                +
00019e 93e0 0273+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001a0 e1e4      	LDI  R30,LOW(20)
0001a1 e0f0      	LDI  R31,HIGH(20)
0001a2 940e 03a0 	CALL SUBOPT_0x2
0001a4 940e 03aa 	CALL SUBOPT_0x4
0001a6 940e 03aa 	CALL SUBOPT_0x4
0001a8 940e 03aa 	CALL SUBOPT_0x4
0001aa e2e0      	LDI  R30,LOW(32)
0001ab 93ea      	ST   -Y,R30
0001ac df62      	RCALL __lcd_write_nibble_G100
                +
0001ad ec88     +LDI R24 , LOW ( 200 )
0001ae e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001af 9701     +SBIW R24 , 1
0001b0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001b1 e2e8      	LDI  R30,LOW(40)
0001b2 93ea      	ST   -Y,R30
0001b3 df7f      	RCALL __lcd_write_data
0001b4 e0e4      	LDI  R30,LOW(4)
0001b5 93ea      	ST   -Y,R30
0001b6 df7c      	RCALL __lcd_write_data
0001b7 e8e5      	LDI  R30,LOW(133)
0001b8 93ea      	ST   -Y,R30
0001b9 df79      	RCALL __lcd_write_data
0001ba e0e6      	LDI  R30,LOW(6)
0001bb 93ea      	ST   -Y,R30
0001bc df76      	RCALL __lcd_write_data
0001bd df8f      	RCALL _lcd_clear
                 _0x2080002:
0001be 9621      	ADIW R28,1
0001bf 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
0001c0 931a      	ST   -Y,R17
0001c1 930a      	ST   -Y,R16
0001c2 81aa      	LDD  R26,Y+2
0001c3 81bb      	LDD  R27,Y+2+1
0001c4 9612      	ADIW R26,2
0001c5 940e 03fc 	CALL __GETW1P
0001c7 9730      	SBIW R30,0
0001c8 f159      	BREQ _0x2020010
0001c9 81aa      	LDD  R26,Y+2
0001ca 81bb      	LDD  R27,Y+2+1
0001cb 9614      	ADIW R26,4
0001cc 940e 03fc 	CALL __GETW1P
0001ce 018f      	MOVW R16,R30
0001cf 9730      	SBIW R30,0
0001d0 f061      	BREQ _0x2020012
                +
0001d1 3002     +CPI R16 , LOW ( 2 )
0001d2 e0e0     +LDI R30 , HIGH ( 2 )
0001d3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001d4 f0f0      	BRLO _0x2020013
0001d5 01f8      	MOVW R30,R16
0001d6 9731      	SBIW R30,1
0001d7 018f      	MOVW R16,R30
                +
0001d8 81aa     +LDD R26 , Y + 2
0001d9 81bb     +LDD R27 , Y + 2 + 1
0001da 9614     +ADIW R26 , 4
0001db 93ed     +ST X + , R30
0001dc 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001dd 81aa      	LDD  R26,Y+2
0001de 81bb      	LDD  R27,Y+2+1
0001df 9612      	ADIW R26,2
0001e0 91ed      	LD   R30,X+
0001e1 91fd      	LD   R31,X+
0001e2 9631      	ADIW R30,1
0001e3 93fe      	ST   -X,R31
0001e4 93ee      	ST   -X,R30
0001e5 9731      	SBIW R30,1
0001e6 81ac      	LDD  R26,Y+4
0001e7 83a0      	STD  Z+0,R26
0001e8 81aa      	LDD  R26,Y+2
0001e9 81bb      	LDD  R27,Y+2+1
0001ea 940e 03fc 	CALL __GETW1P
0001ec 23ff      	TST  R31
0001ed f02a      	BRMI _0x2020014
0001ee 91ed      	LD   R30,X+
0001ef 91fd      	LD   R31,X+
0001f0 9631      	ADIW R30,1
0001f1 93fe      	ST   -X,R31
0001f2 93ee      	ST   -X,R30
                 _0x2020014:
                 _0x2020013:
0001f3 c006      	RJMP _0x2020015
                 _0x2020010:
0001f4 81aa      	LDD  R26,Y+2
0001f5 81bb      	LDD  R27,Y+2+1
0001f6 efef      	LDI  R30,LOW(65535)
0001f7 efff      	LDI  R31,HIGH(65535)
0001f8 93ed      	ST   X+,R30
0001f9 93fc      	ST   X,R31
                 _0x2020015:
0001fa 8119      	LDD  R17,Y+1
0001fb 8108      	LDD  R16,Y+0
0001fc 9625      	ADIW R28,5
0001fd 9508      	RET
                 __print_G101:
0001fe 9726      	SBIW R28,6
0001ff 940e 0409 	CALL __SAVELOCR6
000201 e010      	LDI  R17,0
000202 85ac      	LDD  R26,Y+12
000203 85bd      	LDD  R27,Y+12+1
000204 e0e0      	LDI  R30,LOW(0)
000205 e0f0      	LDI  R31,HIGH(0)
000206 93ed      	ST   X+,R30
000207 93fc      	ST   X,R31
                 _0x2020016:
000208 89ea      	LDD  R30,Y+18
000209 89fb      	LDD  R31,Y+18+1
00020a 9631      	ADIW R30,1
00020b 8bea      	STD  Y+18,R30
00020c 8bfb      	STD  Y+18+1,R31
00020d 9731      	SBIW R30,1
00020e 91e4      	LPM  R30,Z
00020f 2f2e      	MOV  R18,R30
000210 30e0      	CPI  R30,0
000211 f411      	BRNE PC+3
000212 940c 032b 	JMP _0x2020018
000214 2fe1      	MOV  R30,R17
000215 30e0      	CPI  R30,0
000216 f439      	BRNE _0x202001C
000217 3225      	CPI  R18,37
000218 f411      	BRNE _0x202001D
000219 e011      	LDI  R17,LOW(1)
00021a c002      	RJMP _0x202001E
                 _0x202001D:
00021b 940e 03b3 	CALL SUBOPT_0x5
                 _0x202001E:
00021d c10c      	RJMP _0x202001B
                 _0x202001C:
00021e 30e1      	CPI  R30,LOW(0x1)
00021f f4a9      	BRNE _0x202001F
000220 3225      	CPI  R18,37
000221 f419      	BRNE _0x2020020
000222 940e 03b3 	CALL SUBOPT_0x5
000224 c104      	RJMP _0x20200C9
                 _0x2020020:
000225 e012      	LDI  R17,LOW(2)
000226 e040      	LDI  R20,LOW(0)
000227 e000      	LDI  R16,LOW(0)
000228 322d      	CPI  R18,45
000229 f411      	BRNE _0x2020021
00022a e001      	LDI  R16,LOW(1)
00022b c0fe      	RJMP _0x202001B
                 _0x2020021:
00022c 322b      	CPI  R18,43
00022d f411      	BRNE _0x2020022
00022e e24b      	LDI  R20,LOW(43)
00022f c0fa      	RJMP _0x202001B
                 _0x2020022:
000230 3220      	CPI  R18,32
000231 f411      	BRNE _0x2020023
000232 e240      	LDI  R20,LOW(32)
000233 c0f6      	RJMP _0x202001B
                 _0x2020023:
000234 c002      	RJMP _0x2020024
                 _0x202001F:
000235 30e2      	CPI  R30,LOW(0x2)
000236 f439      	BRNE _0x2020025
                 _0x2020024:
000237 e050      	LDI  R21,LOW(0)
000238 e013      	LDI  R17,LOW(3)
000239 3320      	CPI  R18,48
00023a f411      	BRNE _0x2020026
00023b 6800      	ORI  R16,LOW(128)
00023c c0ed      	RJMP _0x202001B
                 _0x2020026:
00023d c004      	RJMP _0x2020027
                 _0x2020025:
00023e 30e3      	CPI  R30,LOW(0x3)
00023f f011      	BREQ PC+3
000240 940c 032a 	JMP _0x202001B
                 _0x2020027:
000242 3320      	CPI  R18,48
000243 f010      	BRLO _0x202002A
000244 332a      	CPI  R18,58
000245 f008      	BRLO _0x202002B
                 _0x202002A:
000246 c007      	RJMP _0x2020029
                 _0x202002B:
000247 e0aa      	LDI  R26,LOW(10)
000248 9f5a      	MUL  R21,R26
000249 2d50      	MOV  R21,R0
00024a 2fe2      	MOV  R30,R18
00024b 53e0      	SUBI R30,LOW(48)
00024c 0f5e      	ADD  R21,R30
00024d c0dc      	RJMP _0x202001B
                 _0x2020029:
00024e 2fe2      	MOV  R30,R18
00024f 36e3      	CPI  R30,LOW(0x63)
000250 f449      	BRNE _0x202002F
000251 940e 03bc 	CALL SUBOPT_0x6
000253 89e8      	LDD  R30,Y+16
000254 89f9      	LDD  R31,Y+16+1
000255 81a4      	LDD  R26,Z+4
000256 93aa      	ST   -Y,R26
000257 940e 03c2 	CALL SUBOPT_0x7
000259 c0cf      	RJMP _0x2020030
                 _0x202002F:
00025a 37e3      	CPI  R30,LOW(0x73)
00025b f441      	BRNE _0x2020032
00025c 940e 03bc 	CALL SUBOPT_0x6
00025e 940e 03ca 	CALL SUBOPT_0x8
000260 940e 0369 	CALL _strlen
000262 2f1e      	MOV  R17,R30
000263 c00a      	RJMP _0x2020033
                 _0x2020032:
000264 37e0      	CPI  R30,LOW(0x70)
000265 f461      	BRNE _0x2020035
000266 940e 03bc 	CALL SUBOPT_0x6
000268 940e 03ca 	CALL SUBOPT_0x8
00026a 940e 0373 	CALL _strlenf
00026c 2f1e      	MOV  R17,R30
00026d 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00026e 6002      	ORI  R16,LOW(2)
00026f 770f      	ANDI R16,LOW(127)
000270 e030      	LDI  R19,LOW(0)
000271 c035      	RJMP _0x2020036
                 _0x2020035:
000272 36e4      	CPI  R30,LOW(0x64)
000273 f011      	BREQ _0x2020039
000274 36e9      	CPI  R30,LOW(0x69)
000275 f411      	BRNE _0x202003A
                 _0x2020039:
000276 6004      	ORI  R16,LOW(4)
000277 c002      	RJMP _0x202003B
                 _0x202003A:
000278 37e5      	CPI  R30,LOW(0x75)
000279 f431      	BRNE _0x202003C
                 _0x202003B:
00027a e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00027b e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00027c 83ee      	STD  Y+6,R30
00027d 83ff      	STD  Y+6+1,R31
00027e e015      	LDI  R17,LOW(5)
00027f c00d      	RJMP _0x202003D
                 _0x202003C:
000280 35e8      	CPI  R30,LOW(0x58)
000281 f411      	BRNE _0x202003F
000282 6008      	ORI  R16,LOW(8)
000283 c004      	RJMP _0x2020040
                 _0x202003F:
000284 37e8      	CPI  R30,LOW(0x78)
000285 f011      	BREQ PC+3
000286 940c 0329 	JMP _0x2020071
                 _0x2020040:
000288 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000289 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00028a 83ee      	STD  Y+6,R30
00028b 83ff      	STD  Y+6+1,R31
00028c e014      	LDI  R17,LOW(4)
                 _0x202003D:
00028d ff02      	SBRS R16,2
00028e c014      	RJMP _0x2020042
00028f 940e 03bc 	CALL SUBOPT_0x6
000291 940e 03d4 	CALL SUBOPT_0x9
000293 85ab      	LDD  R26,Y+11
000294 23aa      	TST  R26
000295 f43a      	BRPL _0x2020043
000296 85ea      	LDD  R30,Y+10
000297 85fb      	LDD  R31,Y+10+1
000298 940e 03f3 	CALL __ANEGW1
00029a 87ea      	STD  Y+10,R30
00029b 87fb      	STD  Y+10+1,R31
00029c e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00029d 3040      	CPI  R20,0
00029e f011      	BREQ _0x2020044
00029f 5f1f      	SUBI R17,-LOW(1)
0002a0 c001      	RJMP _0x2020045
                 _0x2020044:
0002a1 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0002a2 c004      	RJMP _0x2020046
                 _0x2020042:
0002a3 940e 03bc 	CALL SUBOPT_0x6
0002a5 940e 03d4 	CALL SUBOPT_0x9
                 _0x2020046:
                 _0x2020036:
0002a7 fd00      	SBRC R16,0
0002a8 c011      	RJMP _0x2020047
                 _0x2020048:
0002a9 1715      	CP   R17,R21
0002aa f478      	BRSH _0x202004A
0002ab ff07      	SBRS R16,7
0002ac c008      	RJMP _0x202004B
0002ad ff02      	SBRS R16,2
0002ae c004      	RJMP _0x202004C
0002af 7f0b      	ANDI R16,LOW(251)
0002b0 2f24      	MOV  R18,R20
0002b1 5011      	SUBI R17,LOW(1)
0002b2 c001      	RJMP _0x202004D
                 _0x202004C:
0002b3 e320      	LDI  R18,LOW(48)
                 _0x202004D:
0002b4 c001      	RJMP _0x202004E
                 _0x202004B:
0002b5 e220      	LDI  R18,LOW(32)
                 _0x202004E:
0002b6 940e 03b3 	CALL SUBOPT_0x5
0002b8 5051      	SUBI R21,LOW(1)
0002b9 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0002ba 2f31      	MOV  R19,R17
0002bb ff01      	SBRS R16,1
0002bc c017      	RJMP _0x202004F
                 _0x2020050:
0002bd 3030      	CPI  R19,0
0002be f0a1      	BREQ _0x2020052
0002bf ff03      	SBRS R16,3
0002c0 c006      	RJMP _0x2020053
0002c1 81ee      	LDD  R30,Y+6
0002c2 81ff      	LDD  R31,Y+6+1
0002c3 9125      	LPM  R18,Z+
0002c4 83ee      	STD  Y+6,R30
0002c5 83ff      	STD  Y+6+1,R31
0002c6 c005      	RJMP _0x2020054
                 _0x2020053:
0002c7 81ae      	LDD  R26,Y+6
0002c8 81bf      	LDD  R27,Y+6+1
0002c9 912d      	LD   R18,X+
0002ca 83ae      	STD  Y+6,R26
0002cb 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002cc 940e 03b3 	CALL SUBOPT_0x5
0002ce 3050      	CPI  R21,0
0002cf f009      	BREQ _0x2020055
0002d0 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002d1 5031      	SUBI R19,LOW(1)
0002d2 cfea      	RJMP _0x2020050
                 _0x2020052:
0002d3 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002d4 e320      	LDI  R18,LOW(48)
0002d5 81ee      	LDD  R30,Y+6
0002d6 81ff      	LDD  R31,Y+6+1
0002d7 940e 0400 	CALL __GETW1PF
0002d9 87e8      	STD  Y+8,R30
0002da 87f9      	STD  Y+8+1,R31
0002db 81ee      	LDD  R30,Y+6
0002dc 81ff      	LDD  R31,Y+6+1
0002dd 9632      	ADIW R30,2
0002de 83ee      	STD  Y+6,R30
0002df 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002e0 85e8      	LDD  R30,Y+8
0002e1 85f9      	LDD  R31,Y+8+1
0002e2 85aa      	LDD  R26,Y+10
0002e3 85bb      	LDD  R27,Y+10+1
0002e4 17ae      	CP   R26,R30
0002e5 07bf      	CPC  R27,R31
0002e6 f050      	BRLO _0x202005C
0002e7 5f2f      	SUBI R18,-LOW(1)
0002e8 85a8      	LDD  R26,Y+8
0002e9 85b9      	LDD  R27,Y+8+1
0002ea 85ea      	LDD  R30,Y+10
0002eb 85fb      	LDD  R31,Y+10+1
0002ec 1bea      	SUB  R30,R26
0002ed 0bfb      	SBC  R31,R27
0002ee 87ea      	STD  Y+10,R30
0002ef 87fb      	STD  Y+10+1,R31
0002f0 cfef      	RJMP _0x202005A
                 _0x202005C:
0002f1 332a      	CPI  R18,58
0002f2 f028      	BRLO _0x202005D
0002f3 ff03      	SBRS R16,3
0002f4 c002      	RJMP _0x202005E
0002f5 5f29      	SUBI R18,-LOW(7)
0002f6 c001      	RJMP _0x202005F
                 _0x202005E:
0002f7 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002f8 fd04      	SBRC R16,4
0002f9 c01a      	RJMP _0x2020061
0002fa 3321      	CPI  R18,49
0002fb f420      	BRSH _0x2020063
0002fc 85a8      	LDD  R26,Y+8
0002fd 85b9      	LDD  R27,Y+8+1
0002fe 9711      	SBIW R26,1
0002ff f409      	BRNE _0x2020062
                 _0x2020063:
000300 c009      	RJMP _0x20200CA
                 _0x2020062:
000301 1753      	CP   R21,R19
000302 f010      	BRLO _0x2020067
000303 ff00      	SBRS R16,0
000304 c001      	RJMP _0x2020068
                 _0x2020067:
000305 c013      	RJMP _0x2020066
                 _0x2020068:
000306 e220      	LDI  R18,LOW(32)
000307 ff07      	SBRS R16,7
000308 c00b      	RJMP _0x2020069
000309 e320      	LDI  R18,LOW(48)
                 _0x20200CA:
00030a 6100      	ORI  R16,LOW(16)
00030b ff02      	SBRS R16,2
00030c c007      	RJMP _0x202006A
00030d 7f0b      	ANDI R16,LOW(251)
00030e 934a      	ST   -Y,R20
00030f 940e 03c2 	CALL SUBOPT_0x7
000311 3050      	CPI  R21,0
000312 f009      	BREQ _0x202006B
000313 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000314 940e 03b3 	CALL SUBOPT_0x5
000316 3050      	CPI  R21,0
000317 f009      	BREQ _0x202006C
000318 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000319 5031      	SUBI R19,LOW(1)
00031a 85a8      	LDD  R26,Y+8
00031b 85b9      	LDD  R27,Y+8+1
00031c 9712      	SBIW R26,2
00031d f008      	BRLO _0x2020059
00031e cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00031f ff00      	SBRS R16,0
000320 c008      	RJMP _0x202006D
                 _0x202006E:
000321 3050      	CPI  R21,0
000322 f031      	BREQ _0x2020070
000323 5051      	SUBI R21,LOW(1)
000324 e2e0      	LDI  R30,LOW(32)
000325 93ea      	ST   -Y,R30
000326 940e 03c2 	CALL SUBOPT_0x7
000328 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200C9:
000329 e010      	LDI  R17,LOW(0)
                 _0x202001B:
00032a cedd      	RJMP _0x2020016
                 _0x2020018:
00032b 85ac      	LDD  R26,Y+12
00032c 85bd      	LDD  R27,Y+12+1
00032d 940e 03fc 	CALL __GETW1P
00032f 940e 0410 	CALL __LOADLOCR6
000331 9664      	ADIW R28,20
000332 9508      	RET
                 _sprintf:
000333 92ff      	PUSH R15
000334 2ef8      	MOV  R15,R24
000335 9726      	SBIW R28,6
000336 940e 040b 	CALL __SAVELOCR4
000338 940e 03dc 	CALL SUBOPT_0xA
00033a 9730      	SBIW R30,0
00033b f419      	BRNE _0x2020072
00033c efef      	LDI  R30,LOW(65535)
00033d efff      	LDI  R31,HIGH(65535)
00033e c025      	RJMP _0x2080001
                 _0x2020072:
00033f 01de      	MOVW R26,R28
000340 9616      	ADIW R26,6
000341 940e 03ef 	CALL __ADDW2R15
000343 018d      	MOVW R16,R26
000344 940e 03dc 	CALL SUBOPT_0xA
000346 83ee      	STD  Y+6,R30
000347 83ff      	STD  Y+6+1,R31
000348 e0e0      	LDI  R30,LOW(0)
000349 87e8      	STD  Y+8,R30
00034a 87e9      	STD  Y+8+1,R30
00034b 01de      	MOVW R26,R28
00034c 961a      	ADIW R26,10
00034d 940e 03ef 	CALL __ADDW2R15
00034f 940e 03fc 	CALL __GETW1P
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
000353 931a      	ST   -Y,R17
000354 930a      	ST   -Y,R16
000355 ece0      	LDI  R30,LOW(_put_buff_G101)
000356 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000357 93fa      	ST   -Y,R31
000358 93ea      	ST   -Y,R30
000359 01fe      	MOVW R30,R28
00035a 963a      	ADIW R30,10
00035b 93fa      	ST   -Y,R31
00035c 93ea      	ST   -Y,R30
00035d dea0      	RCALL __print_G101
00035e 019f      	MOVW R18,R30
00035f 81ae      	LDD  R26,Y+6
000360 81bf      	LDD  R27,Y+6+1
000361 e0e0      	LDI  R30,LOW(0)
000362 93ec      	ST   X,R30
000363 01f9      	MOVW R30,R18
                 _0x2080001:
000364 940e 0412 	CALL __LOADLOCR4
000366 962a      	ADIW R28,10
000367 90ff      	POP  R15
000368 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000369 91a9          ld   r26,y+
00036a 91b9          ld   r27,y+
00036b 27ee          clr  r30
00036c 27ff          clr  r31
                 strlen0:
00036d 916d          ld   r22,x+
00036e 2366          tst  r22
00036f f011          breq strlen1
000370 9631          adiw r30,1
000371 cffb          rjmp strlen0
                 strlen1:
000372 9508          ret
                 _strlenf:
000373 27aa          clr  r26
000374 27bb          clr  r27
000375 91e9          ld   r30,y+
000376 91f9          ld   r31,y+
                 strlenf0:
000377 9005      	lpm  r0,z+
000378 2000          tst  r0
000379 f011          breq strlenf1
00037a 9611          adiw r26,1
00037b cffb          rjmp strlenf0
                 strlenf1:
00037c 01fd          movw r30,r26
00037d 9508          ret
                 
                 	.DSEG
                 _buf:
000260           	.BYTE 0x10
                 __base_y_G100:
000270           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
00037e 920a      	ST   -Y,R0
00037f 921a      	ST   -Y,R1
000380 92fa      	ST   -Y,R15
000381 936a      	ST   -Y,R22
000382 937a      	ST   -Y,R23
000383 938a      	ST   -Y,R24
000384 939a      	ST   -Y,R25
000385 93aa      	ST   -Y,R26
000386 93ba      	ST   -Y,R27
000387 93ea      	ST   -Y,R30
000388 93fa      	ST   -Y,R31
000389 b7ef      	IN   R30,SREG
00038a 93ea      	ST   -Y,R30
00038b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1:
00038c 2488      	CLR  R8
00038d 2499      	CLR  R9
00038e 940e 014d 	CALL _lcd_clear
000390 e6e4      	LDI  R30,LOW(100)
000391 e0f0      	LDI  R31,HIGH(100)
000392 93fa      	ST   -Y,R31
000393 93ea      	ST   -Y,R30
000394 940e 03e3 	CALL _delay_ms
000396 e0e0      	LDI  R30,LOW(0)
000397 93ea      	ST   -Y,R30
000398 93ea      	ST   -Y,R30
000399 940e 0140 	CALL _lcd_gotoxy
00039b e6e0      	LDI  R30,LOW(_buf)
00039c e0f2      	LDI  R31,HIGH(_buf)
00039d 93fa      	ST   -Y,R31
00039e 93ea      	ST   -Y,R30
00039f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0003a0 93fa      	ST   -Y,R31
0003a1 93ea      	ST   -Y,R30
0003a2 940c 03e3 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
0003a4 93ea      	ST   -Y,R30
0003a5 940e 0133 	CALL __lcd_write_data
0003a7 e0e3      	LDI  R30,LOW(3)
0003a8 e0f0      	LDI  R31,HIGH(3)
0003a9 cff6      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
0003aa e3e0      	LDI  R30,LOW(48)
0003ab 93ea      	ST   -Y,R30
0003ac 940e 010f 	CALL __lcd_write_nibble_G100
                +
0003ae ec88     +LDI R24 , LOW ( 200 )
0003af e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003b0 9701     +SBIW R24 , 1
0003b1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
0003b3 932a      	ST   -Y,R18
0003b4 85ed      	LDD  R30,Y+13
0003b5 85fe      	LDD  R31,Y+13+1
0003b6 93fa      	ST   -Y,R31
0003b7 93ea      	ST   -Y,R30
0003b8 89e9      	LDD  R30,Y+17
0003b9 89fa      	LDD  R31,Y+17+1
0003ba 9509      	ICALL
0003bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
0003bc 89e8      	LDD  R30,Y+16
0003bd 89f9      	LDD  R31,Y+16+1
0003be 9734      	SBIW R30,4
0003bf 8be8      	STD  Y+16,R30
0003c0 8bf9      	STD  Y+16+1,R31
0003c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
0003c2 85ed      	LDD  R30,Y+13
0003c3 85fe      	LDD  R31,Y+13+1
0003c4 93fa      	ST   -Y,R31
0003c5 93ea      	ST   -Y,R30
0003c6 89e9      	LDD  R30,Y+17
0003c7 89fa      	LDD  R31,Y+17+1
0003c8 9509      	ICALL
0003c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
0003ca 89a8      	LDD  R26,Y+16
0003cb 89b9      	LDD  R27,Y+16+1
0003cc 9614      	ADIW R26,4
0003cd 940e 03fc 	CALL __GETW1P
0003cf 83ee      	STD  Y+6,R30
0003d0 83ff      	STD  Y+6+1,R31
0003d1 93fa      	ST   -Y,R31
0003d2 93ea      	ST   -Y,R30
0003d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
0003d4 89a8      	LDD  R26,Y+16
0003d5 89b9      	LDD  R27,Y+16+1
0003d6 9614      	ADIW R26,4
0003d7 940e 03fc 	CALL __GETW1P
0003d9 87ea      	STD  Y+10,R30
0003da 87fb      	STD  Y+10+1,R31
0003db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0003dc 01de      	MOVW R26,R28
0003dd 961c      	ADIW R26,12
0003de 940e 03ef 	CALL __ADDW2R15
0003e0 940e 03fc 	CALL __GETW1P
0003e2 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003e3 91e9      	ld   r30,y+
0003e4 91f9      	ld   r31,y+
0003e5 9630      	adiw r30,0
0003e6 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003e7 ed80     +LDI R24 , LOW ( 0x7D0 )
0003e8 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003e9 9701     +SBIW R24 , 1
0003ea f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003eb 95a8      	wdr
0003ec 9731      	sbiw r30,1
0003ed f7c9      	brne __delay_ms0
                 __delay_ms1:
0003ee 9508      	ret
                 
                 __ADDW2R15:
0003ef 2400      	CLR  R0
0003f0 0daf      	ADD  R26,R15
0003f1 1db0      	ADC  R27,R0
0003f2 9508      	RET
                 
                 __ANEGW1:
0003f3 95f1      	NEG  R31
0003f4 95e1      	NEG  R30
0003f5 40f0      	SBCI R31,0
0003f6 9508      	RET
                 
                 __CWD1:
0003f7 2f6f      	MOV  R22,R31
0003f8 0f66      	ADD  R22,R22
0003f9 0b66      	SBC  R22,R22
0003fa 2f76      	MOV  R23,R22
0003fb 9508      	RET
                 
                 __GETW1P:
0003fc 91ed      	LD   R30,X+
0003fd 91fc      	LD   R31,X
0003fe 9711      	SBIW R26,1
0003ff 9508      	RET
                 
                 __GETW1PF:
000400 9005      	LPM  R0,Z+
000401 91f4      	LPM  R31,Z
000402 2de0      	MOV  R30,R0
000403 9508      	RET
                 
                 __PUTPARD1:
000404 937a      	ST   -Y,R23
000405 936a      	ST   -Y,R22
000406 93fa      	ST   -Y,R31
000407 93ea      	ST   -Y,R30
000408 9508      	RET
                 
                 __SAVELOCR6:
000409 935a      	ST   -Y,R21
                 __SAVELOCR5:
00040a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00040b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00040c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00040d 931a      	ST   -Y,R17
00040e 930a      	ST   -Y,R16
00040f 9508      	RET
                 
                 __LOADLOCR6:
000410 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000411 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000412 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000413 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000414 8119      	LDD  R17,Y+1
000415 8108      	LD   R16,Y
000416 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  13 r1 :   3 r2 :   0 r3 :   0 r4 :   5 r5 :   2 r6 :   5 r7 :   2 
r8 :   4 r9 :   1 r10:   4 r11:   4 r12:   0 r13:   2 r14:   0 r15:   6 
r16:  34 r17:  27 r18:  29 r19:   8 r20:   9 r21:  17 r22:  13 r23:   4 
r24:  25 r25:   7 r26:  61 r27:  28 r28:  14 r29:   1 r30: 276 r31:  87 
x  :  23 y  : 226 z  :  16 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  28 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  22 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  58 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  17 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  34 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  26 ld    :  42 ldd   :  77 ldi   : 107 
lds   :   0 lpm   :  16 lsl   :   0 lsr   :   0 mov   :  17 movw  :  23 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   7 out   :  45 pop   :   1 push  :   1 rcall :  21 ret   :  27 
reti  :   1 rjmp  :  65 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 100 std   :  33 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00082e   2022     72   2094   32768   6.4%
[.dseg] 0x000060 0x000274      0     20     20    2143   0.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
